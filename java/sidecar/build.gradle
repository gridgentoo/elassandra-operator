plugins {
    id 'java'
    id 'application'
    id 'com.google.cloud.tools.jib'
}

mainClassName = 'com.strapdata.strapkop.sidecar.Application'

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }

    zip64=true
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jib {
    from {
        image = 'openjdk:alpine'
    }
    to {
        image = image = dockerImagePrefix + "/" + project.dockerImageSuffix
        tags = [ version, project.gitCommitHash, 'latest']

        // osxkeychain does not work on linux and CI environments
        // credHelper = 'osxkeychain'

        auth {
            username = registryUsername
            password = registryPassword
        }
    }
    container {
        jvmFlags = ['-Xmx256m',
                    '-XX:+UnlockExperimentalVMOptions',
                    '-XX:+UseCGroupMemoryLimitForHeap',
                    '-XX:MaxRAMFraction=2',
                    '-XX:+ExitOnOutOfMemoryError',
                    '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005' // TODO: make this optional
        ]
        mainClass = mainClassName
        ports = ['8080']
        labels = [ description:'Strapkop Elassandra sidecar']
    }
}
tasks.jib.dependsOn project(':java:backup').jar

compileJava {
    sourceCompatibility = 8
    targetCompatibility = 8
    options.encoding = 'UTF-8'
    options.compilerArgs = [ '-parameters', '-Xlint:all', '-Xlint:-processing', '-Xlint:-serial', '-Werror']
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-http-client"
    compile "info.picocli:picocli"
    compile "io.micronaut.configuration:micronaut-picocli"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    compile project(':java:model')
    compile project(':java:backup')
}
