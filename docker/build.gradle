// for the moment we build only one version of Elassandra
// maybe we should always rebuild all N past releases

plugins {
  id 'base'
}

// Import task types
import com.bmuschko.gradle.docker.tasks.image.*

task copyJar(type: Copy) {
  dependsOn   ':java:k8s-addons:jar'
  from        "../java/k8s-addons/build/libs/k8s-addons-${project.version}.jar"
  into        'build'
}

// Strapkop elassandra docker image
def elassandraImageName = dockerImagePrefix + 'node' + dockerImageSuffix

def elassandraVersions = new File("${projectDir}/supportedElassandraVersions.txt") as String[]
println "Supported Elassandra versions :"
elassandraVersions.each {
  println it
}

def normalizeVersion = {
  v -> v.replaceAll('\\.', '_')
}

// basic tasks used usually
task dockerBuildImage {
  dependsOn "dockerBuildImage${normalizeVersion(elassandraVersions[0])}"
}

task dockerPushImageLatest(type: DockerPushImage) {
  dependsOn 'dockerBuildImage'
  images = [ elassandraImageName + ":latest" ]
}

task dockerPushImageOperatorGitCommitHash(type: DockerPushImage) {
  dependsOn 'dockerBuildImage'
  images = [ elassandraImageName + ":" + project.gitCommitHash ]
}

task dockerPushImageElassandraVersion(type: DockerPushImage) {
  dependsOn 'dockerBuildImage'
  images = [ elassandraImageName + ":" + elassandraVersions[0] ]
}

task dockerPushImage {
  dependsOn 'dockerPushImageLatest'
  dependsOn 'dockerPushImageOperatorGitCommitHash'
  dependsOn 'dockerPushImageElassandraVersion'
}

// releases tasks used to build many versions of elassandra
elassandraVersions.each { v ->
  task "dockerBuildImage${normalizeVersion(v)}" (type: DockerBuildImage) {
      dependsOn 'copyJar'
      inputDir = file('.')
      images.add( elassandraImageName+ ":" + v )
      if (v == elassandraVersions[0]) {
        images.add(elassandraImageName + ":" + "latest")
        images.add(elassandraImageName + ":" + project.gitCommitHash)
      }

      buildArgs = [
              'base_image': elassandraParentImage + ":" + v,
              'cassandra_k8s_addons_jar': "./build/k8s-addons-${project.version}.jar"
      ]
  }

  task "dockerPushImage${normalizeVersion(v)}" (type: DockerPushImage) {
    dependsOn "dockerBuildImage${normalizeVersion(v)}"
    images = [ elassandraImageName + ":" + v ]
    url = registryUrl
  }
}

task dockerBuildAllVersions {
  dependsOn elassandraVersions.collect { v -> "dockerBuildImage${normalizeVersion(v)}" }
}

task dockerPushAllVersions {
  dependsOn elassandraVersions.collect { v -> "dockerPushImage${normalizeVersion(v)}" }
  dependsOn 'dockerPushImageLatest'
  dependsOn 'dockerPushImageOperatorGitCommitHash'
}
