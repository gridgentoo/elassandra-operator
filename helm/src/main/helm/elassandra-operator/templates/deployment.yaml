apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "elassandra-operator.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "elassandra-operator.fullname" . }}
spec:
  replicas: {{ default "1" .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "elassandra-operator.name" . }}
      operator: elassandra
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "elassandra-operator.name" . }}
        operator: elassandra
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: {{ default "true" .Values.prometheusEnabled | quote }}
        prometheus.io/port: {{ default "8081" .Values.managementPort | quote }}
        prometheus.io/path: "/prometheus"
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.image.pullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 45
      initContainers:
        # build a PKCS12 keystore from the TLS secret for the micronaut server
        - name: init-tls-cert
          image: frapsoft/openssl
          command: ['sh', '-c', "openssl pkcs12 -export -in /tls-secret/tls.crt -inkey /tls-secret/tls.key -out /tls/operator.p12 -passout pass:changeit"]
          volumeMounts:
          - name: tls-secret-volume
            readOnly: true
            mountPath: "/tls-secret"
          - name: tls-volume
            mountPath: "/tls"
      containers:
        - name: {{ template "elassandra-operator.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          terminationMessagePolicy: "FallbackToLogsOnError"
          volumeMounts:
            - name: tls-volume
              mountPath: "/tls"
          ports:
            - containerPort: {{ default 443 .Values.serverPort }}
              name: https
            - containerPort: {{ default 8081 .Values.managementPort }}
              name: management
            - containerPort: {{ default "-1" .Values.jmxmpPort }}
              name: jmxmp
            - containerPort: 5005
              name: jdb
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /ready
              port: {{ default 443 .Values.serverPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              httpGet:
                scheme: HTTPS
                path: /shutdown/graceful
                port: {{ default 443 .Values.serverPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
          - name: OPERATOR_SERVICE_NAME
            value: {{ template "elassandra-operator.name" . }}
          - name: OPERATOR_SERVER_PORT
            value: {{ default "443" .Values.serverPort | quote }}
          - name: OPERATOR_MANAGEMENT_PORT
            value: {{ default "8081" .Values.managementPort | quote }}
          - name: OPERATOR_JMXMP_PORT
            value: {{ default "-1" .Values.jmxmpPort | quote }}
          - name: OPERATOR_PROMETHEUS_ENABLED
            value: {{ default "true" .Values.prometheusEnabled | quote }}
          - name: OPERATOR_TASKS_RETENTION
            value: {{ default "7D" .Values.taskRetention | quote }}
          - name: ADDRESS_TRANSLATOR_DNS_DOMAIN
            value: {{ default "internal.strapdata.com" .Values.translatorDnsDomain | quote }}
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.watchNamespace }}
          - name: OPERATOR_WATCH_NAMESPACE
            value: {{ .Values.watchNamespace }}
          {{- end }}
          {{- if .Values.env }}
          {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
          {{- end }}
      volumes:
      - name: tls-volume
        emptyDir: {}
      - name: tls-secret-volume
        secret:
          secretName: {{ template "elassandra-operator.name" . }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.rbacEnabled }}
      serviceAccountName: {{ template "elassandra-operator.fullname" . }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
{{- end }}

