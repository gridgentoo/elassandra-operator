apiVersion: stable.strapdata.com/v1
kind: ElassandraDatacenter
metadata:
  name: {{ template "elassandra.resourceName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "elassandra.name" . }}
    chart: {{ template "elassandra.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  clusterName: {{ include "elassandra.clusterName" . | required "Invalid clusterName : Release name has to be clustername-dcname (in lowercase), clustername must match ([0-9a-z]+)" }}
  datacenterName: {{ include "elassandra.datacenterName" . | required "Invalid datacenterName : Release name has to be clustername-dcname (in lowercase), datacenterName must match ([0-9a-z]+)" }}
  workload: {{ default "READ_WRITE" .Values.workload }}
  replicas: {{ default "1" .Values.replicas }}
  parked: {{ default "false" .Values.parked }}
  autoScaleMode: {{ default "MANUAL" .Values.autoScaleMode }}
  elassandraImage: "{{ .Values.image.elassandraRepository }}:{{ .Values.image.tag }}"
  {{- if .Values.webHookUrl }}
  webHookUrl: {{ .Values.webHookUrl }}
  {{- end }}
  imagePullPolicy: {{ .Values.image.pullPolicy }}
  {{- if .Values.image.pullSecrets }}
  imagePullSecrets:
  {{- range $pullSecret := .Values.image.pullSecrets }}
    - {{ $pullSecret }}
  {{- end }}
  {{- end }}
  computeJvmMemorySettings:  {{ default "true" .Values.computeJvmMemorySettings }}
  {{- if .Values.appServiceAccount }}
  appServiceAccount: {{ .Values.appServiceAccount  }}
  {{ else }}
  appServiceAccount: {{ template "elassandra.serviceAccount" . }}
  {{- end }}
  {{- if .Values.priorityClassName }}
  priorityClassName: {{ .Values.priorityClassName  }}
  {{- end }}
  {{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
  {{- end }}
  {{- if .Values.customLabels }}
  customLabels:
{{ toYaml .Values.customLabels | indent 4 }}
  {{- end }}
  resources:
{{ toYaml .Values.resources | indent 4 }}
  dataVolumeClaim:
{{ toYaml .Values.dataVolumeClaim | indent 4 }}
{{- if .Values.env }}
  env:
{{ toYaml .Values.env | indent 4 }}
{{- end }}
{{- if .Values.scheduledBackups }}
  scheduledBackups:
{{ toYaml .Values.scheduledBackups | indent 4 }}
{{- end }}
  userConfigMapVolumeSource:
    name: {{ template "elassandra.resourceName" . }}
    items:
{{- range $key, $val := .Values.configs }}
      - key: {{ $key }}
        path: {{ $key }}
{{- end }}
{{- if .Values.userConfigMapVolumeSource }}
{{ toYaml .Values.userConfigMapVolumeSource | indent 4 }}
{{- end }}
{{- if .Values.userSecretVolumeSource }}
  userSecretVolumeSource:
{{ toYaml .Values.userSecretVolumeSource | indent 4 }}
{{- end }}
  elasticsearchEnabled: {{ default "true" .Values.elasticsearchEnabled }}
  elasticsearchLoadBalancerEnabled: {{ default "false" .Values.elasticsearchLoadBalancerEnabled }}
  {{- if .Values.elasticsearchLoadBalancerIp }}
  elasticsearchLoadBalancerIp: {{ .Values.elasticsearchLoadBalancerIp }}
  {{- end }}
  elasticsearchIngressEnabled: {{ default "false" .Values.elasticsearchIngressEnabled }}
  prometheusEnabled: {{ default "false" .Values.prometheusEnabled }}
  prometheusPort: {{ default "9500" .Values.prometheusPort }}
{{- if .Values.reaper }}
  reaper:
    enabled: {{ default "false" .Values.reaper.enabled }}
    {{- if .Values.reaper.image }}
    image: {{ .Values.reaper.image }}
    {{- end }}
    {{- if .Values.reaper.ingressSuffix }}
    ingressSuffix: {{ .Values.reaper.ingressSuffix }}
    {{- if .Values.reaper.ingressAnnotations }}
    ingressAnnotations:
    {{ toYaml .Values.reaper.ingressAnnotations | indent 6 }}
    {{- end }}
{{- end }}
    jwtSecret: {{ default "68d45d8f-419f-429e-8ba0-7b475cba795d" .Values.reaper.jwtSecret }}
    loggingLevel: {{ default "INFO" .Values.reaper.loggingLevel }}
{{- end }}
{{- if .Values.externalDns }}
  externalDns:
    enabled: {{ default "false" .Values.externalDns.enabled }}
    root: {{ default "xxx" .Values.externalDns.root }}
    domain: {{ .Values.externalDns.domain }}
    ttl: {{ default "300" .Values.externalDns.ttl }}
{{- end }}
  privilegedSupported: {{ default "false" .Values.privilegedSupported }}
  hostPortEnabled: {{ default "false" .Values.hostPortEnabled }}
  hostNetworkEnabled: {{ default "false" .Values.hostNetworkEnabled }}
  elasticsearchPort: {{ default "9200" .Values.elasticsearchPort | quote }}
  elasticsearchTransportPort: {{ default "9300" .Values.elasticsearchTransportPort | quote }}
  nativePort: {{ default "9042" .Values.nativePort | quote }}
  storagePort: {{ default "7000" .Values.storagePort | quote }}
  sslStoragePort: {{ default "7001" .Values.sslStoragePort | quote }}
{{- if .Values.jdbPort }}
  jdbPort: {{ .Values.jdbPort }}
{{- end }}
{{- if .Values.jmxPort }}
  jmxPort: {{ .Values.jmxPort }}
{{- end }}
  jmxmpEnabled: {{ default "false" .Values.jmxmpEnabled | quote }}
  jmxmpOverSSL: {{ default "false" .Values.jmxmpOverSSL | quote }}
{{- if .Values.ssl }}
  ssl:
{{ toYaml .Values.ssl | indent 4 }}
{{- end }}
{{- if .Values.authentication }}
  authentication:
{{ toYaml .Values.authentication | indent 4 }}
{{- end }}
{{- if .Values.enterprise }}
  enterprise:
{{ toYaml .Values.enterprise | indent 4 }}
{{- end }}
{{- if .Values.remoteSeeds }}
  remoteSeeds:
{{ toYaml .Values.remoteSeeds | indent 4 }}
{{- end }}
{{- if .Values.remoteSeeders }}
  remoteSeeders:
{{ toYaml .Values.remoteSeeders | indent 4 }}
{{- end }}
{{- if .Values.datacenterGroup }}
  datacenterGroup:
{{ toYaml .Values.datacenterGroup | indent 4 }}
{{- end }}
  snitchPreferLocal: {{ default "true" .Values.snitchPreferLocal }}
{{- if .Values.managedKeyspaces }}
  managedKeyspaces:
{{ toYaml .Values.managedKeyspaces | indent 4 }}
{{- end }}
{{- if .Values.kibana }}
  kibana:
    enabled: {{ .Values.kibana.enabled | quote }}
    {{- if .Values.kibana.ingressSuffix }}
    ingressSuffix: {{ .Values.kibana.ingressSuffix }}
    {{- end }}
    {{- if .Values.kibana.ingressAnnotations }}
    ingressAnnotations:
    {{ toYaml .Values.kibana.ingressAnnotations | indent 6 }}
    {{- end }}
    {{- if .Values.kibana.image }}
    {{- if .Values.kibana.tag }}
    image:  "{{ .Values.kibana.image }}:{{ .Values.kibana.tag }}"
    {{- else }}
    image:  "{{ .Values.kibana.image }}:{{ template "kibana.version" . }}"
    {{- end }}
    {{- if .Values.kibana.version }}
    version: {{ .Values.kibana.version }}
    {{- end }}
{{- end }}
{{- if .Values.kibana.spaces }}
    spaces:
{{ toYaml .Values.kibana.spaces | indent 4 }}
{{- end }}
{{- end }}