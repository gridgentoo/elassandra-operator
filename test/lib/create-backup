#!/usr/bin/env bash

cd `dirname "$BASH_SOURCE"`/../..
source test/config

name=${1:-${DEFAULT_NAME}}
replicas=${2:-1}
backup_name=${3:-testbackup-${name}}

cat <<EOF | kubectl create -f -
apiVersion: stable.strapdata.com/v1
kind: ElassandraTask
metadata:
  name: ${backup_name}
spec:
  cluster: $(./test/lib/get-cluster-name ${name})
  datacenter: $(./test/lib/get-dc-name ${name})
  backup:
    type: "AZURE_BLOB"
    target: ${AZURE_STORAGE_CONTAINER}
EOF

for ((i=0; i<${replicas}; i++)); do
  while true; do
    echo "waiting for pod backups to finish on node $i"
    kubectl logs $(./test/lib/get-pod-name ${name} ${i}) sidecar --tail=10
    if kubectl logs $(./test/lib/get-pod-name ${name} ${i}) sidecar --tail=10 | grep "Cleared snapshot \"$backup_name\""; then
      break;
    elif kubectl logs $(./test/lib/get-pod-name ${name} ${i}) sidecar --tail=20 | grep "ERROR"; then
      exit 1
    fi
    sleep 1
  done
done